{"version":3,"sources":["audio/alarm.mp3","components/AlarmSetting.js","components/Speaker.js","components/Alarm.js","components/Alert.js","components/TimerApp.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AlarmSettings","_ref","change","mins","secs","click","reset","react_default","a","createElement","className","onClick","Speaker","sound","soundOn","style","animation","concat","src","loop","autoPlay","Alarm","Fragment","Alert","alert1","alert2","TimerApp","state","seconds","minutes","hours","alarmMins","alarmSecs","alarmSet","alarmCounterMins","alarmCounterSecs","alarmSetAlert","alert","head","content","handleTimer","action","_this","counter","setInterval","setState","clearInterval","handleAlarmSetting","type","handleAlarm","e","preventDefault","alarmTime","alarmCounter","setTimeout","stopAlarm","resetAlarmCounter","handleAlertRemove","this","_this2","AlarmSetting","components_Speaker","components_Alarm","components_Alert","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_TimerApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2b29d85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.87dc6e28.mp3\";","import React from \"react\";\r\nimport \"./../styles/alarm.sass\";\r\n\r\nconst AlarmSettings = ({ change, mins, secs, click, reset }) => {\r\n  return (\r\n    <div className=\"settings\">\r\n      <p>min:</p>{\" \"}\r\n      <button onClick={() => change(\"min\", \"sub\")} className=\"formBtn\">\r\n        -\r\n      </button>\r\n      <p className=\"number\">{mins}</p>\r\n      <button onClick={() => change(\"min\", \"add\")} className=\"formBtn\">\r\n        +\r\n      </button>\r\n      <p>sec:</p>{\" \"}\r\n      <button onClick={() => change(\"sec\", \"sub\")} className=\"formBtn\">\r\n        -\r\n      </button>\r\n      <p className=\"number\">{secs}</p>\r\n      <button onClick={() => change(\"sec\", \"add\")} className=\"formBtn\">\r\n        +\r\n      </button>\r\n      <button onClick={click} className=\"submit\">\r\n        Set Alarm\r\n      </button>\r\n      <button onClick={reset} className=\"submit\">\r\n        reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlarmSettings;\r\n","import React from \"react\";\r\nimport \"../styles/speaker.sass\";\r\n\r\nconst Speaker = ({ sound, click, soundOn }) => {\r\n  return (\r\n    <div className=\"speaker\">\r\n      <i\r\n        className=\"fas fa-volume-down\"\r\n        style={{\r\n          animation: `${soundOn ? \"shake .5s linear infinite\" : \"none\"}`\r\n        }}\r\n      />\r\n      <button\r\n        onClick={click}\r\n        style={{\r\n          animation: `${soundOn ? \"shadow .5s linear infinite\" : \"none\"}`\r\n        }}\r\n      >\r\n        <span />\r\n        <span />\r\n      </button>\r\n      {soundOn && <audio src={sound} loop autoPlay />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Speaker;\r\n","import React from \"react\";\r\nimport \"../styles/alarm.sass\";\r\n\r\nconst Alarm = ({ mins, secs, soundOn }) => {\r\n  return (\r\n    <>\r\n      {soundOn ? (\r\n        <h1\r\n          className=\"counter\"\r\n          style={{\r\n            animation: `${soundOn ? \"blink .5s infinite\" : \"none\"}`\r\n          }}\r\n        >\r\n          ALERT!\r\n        </h1>\r\n      ) : (\r\n        <h1 className=\"counter\">\r\n          {mins < 10 ? \"0\" + mins : mins} : {secs < 10 ? \"0\" + secs : secs}\r\n        </h1>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alarm;\r\n","import React from \"react\";\r\nimport \"../styles/alarm.sass\";\r\n\r\nconst Alert = ({ click, alert1, alert2 }) => {\r\n  return (\r\n    <div className=\"alert\">\r\n      <h1>{alert1}</h1>\r\n      <p>{alert2}</p>\r\n      <button onClick={click}>ok</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\nimport \"./../styles/timer.sass\";\nimport AlarmSetting from \"./AlarmSetting\";\nimport Speaker from \"./Speaker\";\nimport sound from \"../audio/alarm.mp3\";\nimport Alarm from \"./Alarm\";\nimport Alert from \"./Alert\";\n\nclass TimerApp extends Component {\n  state = {\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n    alarmMins: 0,\n    alarmSecs: 0,\n    soundOn: false,\n    alarmSet: false,\n    alarmCounterMins: 0,\n    alarmCounterSecs: 0,\n    alarmSetAlert: false,\n    alert: { head: \"\", content: \"\" }\n  };\n\n  componentDidUpdate() {\n    if (this.state.seconds >= 60) {\n      this.setState({\n        seconds: 0,\n        minutes: this.state.minutes + 1\n      });\n    }\n    if (this.state.minutes >= 60) {\n      this.setState({\n        minutes: 0,\n        hours: this.state.hours + 1\n      });\n    }\n  }\n\n  handleTimer = action => {\n    if (action === \"start\") {\n      this.counter = setInterval(() => {\n        this.setState({\n          seconds: this.state.seconds + 1\n        });\n      }, 1000);\n    } else if (action === \"stop\") {\n      clearInterval(this.counter);\n    } else {\n      clearInterval(this.counter);\n      this.setState({\n        seconds: 0,\n        minutes: 0,\n        hours: 0\n      });\n    }\n  };\n\n  handleAlarmSetting = (type, action) => {\n    if (\n      (type === \"min\" && this.state.alarmMins === 0 && action === \"sub\") ||\n      (type === \"sec\" && this.state.alarmSecs === 0 && action === \"sub\")\n    ) {\n      this.setState({\n        alert: { head: \"Alert!\", content: \"Range is 0-59\" },\n        alarmSetAlert: true\n      });\n      return;\n    }\n    if (\n      (type === \"min\" && this.state.alarmMins === 59 && action === \"add\") ||\n      (type === \"sec\" && this.state.alarmSecs === 59 && action === \"add\")\n    ) {\n      this.setState({\n        alert: { head: \"Alert!\", content: \"Range is 0-59\" },\n        alarmSetAlert: true\n      });\n      return;\n    }\n    if (type === \"min\") {\n      if (action === \"sub\") {\n        this.setState({\n          alarmMins: this.state.alarmMins - 1\n        });\n      } else {\n        this.setState({\n          alarmMins: this.state.alarmMins + 1\n        });\n      }\n    } else {\n      if (action === \"sub\") {\n        this.setState({\n          alarmSecs: this.state.alarmSecs - 1\n        });\n      } else {\n        this.setState({\n          alarmSecs: this.state.alarmSecs + 1\n        });\n      }\n    }\n  };\n\n  alarmCounter;\n  handleAlarm = e => {\n    e.preventDefault();\n\n    if (this.state.alarmSet) {\n      this.setState({\n        alarmSetAlert: true,\n        alert: {\n          head: \"Alarm already set!\",\n          content: \"Press RESET button to start new one.\"\n        }\n      });\n      return;\n    }\n\n    const alarmTime =\n      this.state.alarmMins * 60000 + this.state.alarmSecs * 1000;\n    this.setState({\n      alarmCounterMins: this.state.alarmMins,\n      alarmCounterSecs: this.state.alarmSecs,\n      alarmMins: 0,\n      alarmSecs: 0,\n      alarmSet: true\n    });\n    const counter = setInterval(() => {\n      if (this.state.alarmCounterSecs > 0) {\n        this.setState({\n          alarmCounterSecs: this.state.alarmCounterSecs - 1\n        });\n      } else if (\n        this.state.alarmCounterSecs === 0 &&\n        this.state.alarmCounterMins !== 0\n      ) {\n        this.setState({\n          alarmCounterSecs: 59,\n          alarmCounterMins: this.state.alarmCounterMins - 1\n        });\n      } else {\n        this.setState({\n          alarmCounterSecs: 0,\n          alarmCounterMins: 0\n        });\n        clearInterval(counter);\n      }\n    }, 1000);\n    this.alarmCounter = setTimeout(() => {\n      this.setState({ soundOn: true });\n    }, alarmTime);\n  };\n\n  stopAlarm = () => {\n    if (this.state.soundOn) {\n      this.setState({\n        soundOn: false,\n        alarmSet: false\n      });\n    }\n  };\n\n  resetAlarmCounter = () => {\n    clearInterval(this.alarmCounter);\n    this.setState({\n      alarmMins: 0,\n      alarmSecs: 0,\n      soundOn: false,\n      alarmSet: false,\n      alarmCounterMins: 0,\n      alarmCounterSecs: 0\n    });\n  };\n\n  handleAlertRemove = () => {\n    this.setState({\n      alarmSetAlert: false\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"timer\">\n            <h1>\n              {this.state.hours >= 10\n                ? this.state.hours\n                : \"0\" + this.state.hours}{\" \"}\n            </h1>{\" \"}\n            :\n            <h1>\n              {this.state.minutes >= 10\n                ? this.state.minutes\n                : \"0\" + this.state.minutes}\n            </h1>\n            :{\" \"}\n            <h1>\n              {this.state.seconds >= 10\n                ? this.state.seconds\n                : \"0\" + this.state.seconds}\n            </h1>\n          </div>\n          <button onClick={() => this.handleTimer(\"start\")}>start</button>\n          <button onClick={() => this.handleTimer(\"stop\")}>stop</button>\n          <button onClick={() => this.handleTimer(\"reset\")}>reset</button>\n        </div>\n        <AlarmSetting\n          change={this.handleAlarmSetting}\n          secs={this.state.alarmSecs}\n          mins={this.state.alarmMins}\n          click={this.handleAlarm}\n          reset={this.resetAlarmCounter}\n        />\n        <Speaker\n          sound={sound}\n          click={this.stopAlarm}\n          soundOn={this.state.soundOn}\n        />\n        {this.state.alarmSet && (\n          <Alarm\n            mins={this.state.alarmCounterMins}\n            secs={this.state.alarmCounterSecs}\n            soundOn={this.state.soundOn}\n          />\n        )}\n        {this.state.alarmSetAlert && (\n          <Alert\n            click={this.handleAlertRemove}\n            alert1={this.state.alert.head}\n            alert2={this.state.alert.content}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default TimerApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.sass\";\nimport TimerApp from \"./components/TimerApp\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<TimerApp />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}